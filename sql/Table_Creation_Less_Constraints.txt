DROP TABLE Transaction;
DROP TABLE Recycler;
DROP TABLE Shipment;
DROP TABLE SportingGood;
DROP TABLE MusicalInstrument;
DROP TABLE Clothing;
DROP TABLE Technology;
DROP TABLE Textbook;
DROP TABLE Inventory;
DROP TABLE sports;
DROP TABLE tBrand;
DROP TABLE CSize;
DROP TABLE instrType;
DROP TABLE device;
DROP TABLE colour;
DROP TABLE cBrand;
DROP TABLE article;
DROP TABLE Condition;
DROP TABLE Category;
DROP TABLE UsedIn;
DROP TABLE Isbn;
DROP TABLE Class;
DROP TABLE StfxUser;


CREATE TABLE StfxUser (
        UserID      VARCHAR2(9)             NOT NULL,
        First       VARCHAR2(20)          NOT NULL,
        Last        VARCHAR2(20)          NOT NULL,
        Address     VARCHAR2(40),
        PRIMARY KEY (UserID)
);
GRANT SELECT ON StfxUser TO PUBLIC;


CREATE TABLE Class (
        Crn         NUMBER(5)             NOT NULL,
        DeptCode    VARCHAR2(4)           NOT NULL,
        CourseNo    NUMBER(3)             NOT NULL,
        CourseName  VARCHAR2(40),
        PRIMARY KEY (Crn),
        CONSTRAINT Valid_CourseNo CHECK (CourseNo > 0 AND CourseNo < 999)
);
GRANT SELECT ON Class TO PUBLIC;


CREATE TABLE Isbn (
        Isbn        NUMBER(10)             NOT NULL,
        Title       VARCHAR2(1000),
        Author      VARCHAR2(40),
        Edition     NUMBER(2),
        PRIMARY KEY (Isbn)
);
GRANT SELECT ON Isbn TO PUBLIC;


CREATE TABLE UsedIn (
        Crn         NUMBER(5),
        Isbn        NUMBER(10),
        Year        NUMBER(4),
        PRIMARY KEY (Crn, Isbn, Year),
        CONSTRAINT FK_UsedIn_Crn    FOREIGN KEY (Crn)  REFERENCES Class(Crn),
        CONSTRAINT FK_UsedIn_Isbn   FOREIGN KEY (Isbn) REFERENCES Isbn(Isbn)
);
GRANT SELECT ON UsedIn TO PUBLIC;             


CREATE TABLE Category (
        Category    VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON Category TO PUBLIC;


CREATE TABLE Condition (
        Condition   VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON Condition TO PUBLIC;


CREATE TABLE article (
        article     VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON article TO PUBLIC;


CREATE TABLE cBrand (
        cBrand      VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON cBrand TO PUBLIC;


CREATE TABLE colour (
        colour      VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON colour TO PUBLIC;


CREATE TABLE device (
        device      VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON device TO PUBLIC;


CREATE TABLE instrType (
        intrType    VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON instrType TO PUBLIC;


CREATE TABLE CSize (
        CSize       VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON CSize TO PUBLIC;


CREATE TABLE tBrand (
        tBrand      VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON tBrand TO PUBLIC;


CREATE TABLE sports (
        sports      VARCHAR(40)         NOT NULL,
        Abbrev      VARCHAR(4)          NOT NULL,
        PRIMARY KEY (Abbrev)
);
GRANT SELECT ON sports TO PUBLIC;


CREATE TABLE Inventory (
        ItemID      NUMBER(7),
        UserID      VARCHAR2(9)            NOT NULL,
        ListPrice   NUMBER(8, 2),
        PostDate    DATE,
        Category    VARCHAR2(10),
        PostType    CHAR(1),
        Description VARCHAR2(100),
	Keywords VARCHAR2(100),
        Condition   VARCHAR2(4),
        PRIMARY KEY (ItemID)
);
GRANT SELECT ON Inventory TO PUBLIC;


CREATE TABLE Textbook (
        ItemID       NUMBER(7),
        Isbn         NUMBER(9),
        PRIMARY KEY  (ItemID),
        CONSTRAINT FB_TB_ItemID     FOREIGN KEY (ItemID) REFERENCES Inventory(ItemID),
        CONSTRAINT FK_TB_Isbn       FOREIGN KEY (Isbn)   REFERENCES Isbn(Isbn)
);
GRANT SELECT ON Textbook TO PUBLIC;


CREATE TABLE Technology (
        ItemID        NUMBER(7),
        Brand         VARCHAR2(20),
        DeviceType    VARCHAR2(20),    
        SerialNo      NUMBER(20),
        PRIMARY KEY   (ItemID),
        CONSTRAINT FK_Tech_ItemID     FOREIGN KEY (ItemID)     REFERENCES Inventory(ItemID)
);
GRANT SELECT ON Technology TO PUBLIC;


CREATE TABLE Clothing (
        ItemID        NUMBER(7),
        Brand         VARCHAR2(20),
        CSize         VARCHAR2(10),
        Article       VARCHAR2(10),
        PRIMARY KEY   (ItemID),
        CONSTRAINT FK_Cloth_ItemID  FOREIGN KEY (ItemID)  REFERENCES Inventory(ItemID)
);
GRANT SELECT ON Clothing TO PUBLIC;


CREATE TABLE MUSICALINSTRUMENT (
        ItemID        NUMBER(7),
        InstrType     VARCHAR2(20),
        PRIMARY KEY   (ItemID)
);
GRANT SELECT ON MUSICALINSTRUMENT TO PUBLIC;


CREATE TABLE SportingGood (
        ItemID        NUMBER(7),
        Sport         VARCHAR2(20),
        PRIMARY KEY   (ItemID)
);
GRANT SELECT ON SportingGood TO PUBLIC;


CREATE TABLE Shipment (
        ShipID        NUMBER(7),
        ItemID        NUMBER(7)      NOT NULL,
        UserAddress   VARCHAR2(40)   NOT NULL,
        RcyclAddress  VARCHAR2(40)   NOT NULL,
        DateShipped   DATE,
        PRIMARY KEY   (ShipID),
        CONSTRAINT FB_Ship_ItemID    FOREIGN KEY (ItemID) REFERENCES Inventory(ItemID)
);
GRANT SELECT ON Shipment TO PUBLIC;


CREATE TABLE Recycler (
        RcyclID       NUMBER(7),
        Name          VARCHAR2(20),
        PhoneNo       NUMBER(10),
        Email         VARCHAR2(30),
        Address       VARCHAR2(40),
        ItemCategory  VARCHAR2(40)   NOT NULL,
        PRIMARY KEY   (RcyclID)
);
GRANT SELECT ON Recycler TO PUBLIC;


CREATE TABLE Transaction (
        TransID       NUMBER(4),
        ItemID        NUMBER(7),
        TransPrice    NUMBER(8, 2),
        buyerID       NUMBER(9),
        sellerID    NUMBER(9),
        TransDate     DATE,
        Address       VARCHAR2(40),
        PRIMARY KEY   (TransID),
        CONSTRAINT FK_Trans_ItemId   FOREIGN KEY (ItemID)     REFERENCES Inventory(ItemID));

